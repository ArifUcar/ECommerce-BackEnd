@page "/"
@using E_Commerce.Models
@using E_Commerce.Services.Interfaces
@inject IProductService ProductService

<div class="container">
    <!-- Hero Section -->
    <div class="hero-section text-center">
        <h1 class="display-4 mb-4">Ürünlerimiz</h1>
        <p class="lead mb-5">En yeni ve en popüler ürünlerimizi keşfedin</p>
    </div>

    <!-- Products Section -->
    <div class="products-section">
        @if (loading)
        {
            <div class="text-center">
                <div class="spinner-border text-primary" role="status">
                    <span class="visually-hidden">Yükleniyor...</span>
                </div>
            </div>
        }
        else if (error != null)
        {
            <div class="alert alert-danger" role="alert">
                @error
            </div>
        }
        else
        {
            <div class="row g-4">
                @foreach (var product in products)
                {
                    <div class="col-md-3">
                        <div class="card h-100">
                            
                                 class="card-img-top" alt="@product.ProductName">
                            <div class="card-body">
                                <h5 class="card-title">@product.ProductName</h5>
                                <p class="card-text">@product.Description</p>
                                <div class="d-flex justify-content-between align-items-center">
                                    <span class="h5 mb-0">@product.Price.ToString("C2")</span>
                                    <button class="btn btn-primary">
                                        <i class="bi bi-cart-plus"></i> Sepete Ekle
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        }
    </div>
</div>

@code {
    private List<Product> products = new();
    private bool loading = true;
    private string? error;

    protected override async Task OnInitializedAsync()
    {
        try
        {
            loading = true;
            products = await ProductService.GetAllProductsAsync();
        }
        catch (Exception ex)
        {
            error = ex.Message;
        }
        finally
        {
            loading = false;
        }
    }
} 